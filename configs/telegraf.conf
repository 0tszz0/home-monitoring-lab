[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "30s"
  flush_jitter = "0s"
  precision = ""
  hostname = "telegraf-host"
  omit_hostname = false

###############################################################################
# OUTPUT PLUGINS
###############################################################################

[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "${INFLUXDB_DB}"
  username = "${INFLUXDB_USER}"
  password = "${INFLUXDB_USER_PASSWORD}"

###############################################################################
# INPUT PLUGINS
###############################################################################

[[inputs.ping]]
  ## Devices to ping
  urls = [
    "192.168.1.254",   # Router
    "192.168.1.10",    # Linux PC ETH
    "192.168.1.11",    # Linux PC Wifi
    "192.168.1.12",    # Dhara Laptop
    "192.168.1.13",    # NT Macbook
    "192.168.1.16",    # Dhara iPhone
    "192.168.1.17",    # Polk React
    "192.168.1.18",    # MKS Android
    "192.168.1.19",    # Home Lenovo Tab
    "192.168.1.20",    # Printer Canon
    "192.168.1.21",    # Living Room TV
    "192.168.1.23",    # Home Poco Android
    "192.168.1.24",    # NT iPhone
  ]
  count = 4
  ping_interval = 1.0
  timeout = 2.0
  method = "native"   # "exec" is fallback if native fails
  interface = ""      # Optional: specify a NIC like "eth0"
  data_format = "influx"

[[inputs.tail]]
  files = ["/data/arp.out"]
  from_beginning = true
  data_format = "influx"

[[inputs.http]]
  name_override = "adguard_stats"
  urls = ["http://adguardhome:80/control/stats"]
  method = "GET"
  username = "${ADGUARD_USER}"
  password = "${ADGUARD_PASSWORD}"
  data_format = "json"
  interval = "10s"
  timeout = "5s"
